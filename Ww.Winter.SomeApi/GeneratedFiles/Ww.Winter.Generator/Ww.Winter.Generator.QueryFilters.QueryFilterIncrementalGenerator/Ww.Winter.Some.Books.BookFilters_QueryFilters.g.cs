//---------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the Ww.Winter source generator.
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

using System.Linq;

#nullable enable

namespace Ww.Winter.Some.Books;

public static partial class BookFilters
{
    public static IQueryable<Book> ApplyFilter(
        this IQueryable<Book> query,
        BookQueries.QueryBooksFilter filter)
    {
        if (filter.TitlePrefix is not null)
        {
            query = query.Where(e => e.Title.StartsWith(filter.TitlePrefix));
        }
        if (filter.TitleFragment is not null)
        {
            query = query.Where(e => e.Title.Contains(filter.TitleFragment));
        }
        if (filter.Isbn is not null)
        {
            query = query.Where(e => e.Isbn == filter.Isbn);
        }
        if (filter.AuthorFragment is not null)
        {
            query = query.Where(e => e.Author.Contains(filter.AuthorFragment));
        }
        if (filter.CategoryFragment is not null)
        {
            query = query.Where(e => e.Category.Contains(filter.CategoryFragment));
        }
        if (filter.PageCountFrom is not null)
        {
            query = query.Where(e => e.PageCount >= filter.PageCountFrom);
        }
        if (filter.PageCountTo is not null)
        {
            query = query.Where(e => e.PageCount <= filter.PageCountTo);
        }

        return query;
    }

}
